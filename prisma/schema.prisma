generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  createDate    DateTime      @default(now())
  updateDate    DateTime      @updatedAt()
  isAdmin       Boolean       @default(false)
  email         String        @unique()
  phoneNumber   String        @unique()
  firstName     String
  middleName    String?
  lastName      String
  password      String
  orders        Order[]
  custom_orders CustomOrder[]
  profile_pic   String?
}

enum CategoryType {
  SILVER
  GOLD
  DIAMOND
  CUSTOM
}

model Order {
  id          Int      @id @default(autoincrement())
  quantity    Int?     @default(1)
  total       Float
  discount    Float
  grand_total Float
  createDate  DateTime @default(now())
  updateDate  DateTime @updatedAt()
  user_id     String
  user        User     @relation(fields: [user_id], references: [id])
  item_id     Int
  item        Menu     @relation(fields: [item_id], references: [id])
}

model Menu {
  id            Int           @id @default(autoincrement())
  name          String
  category_type CategoryType
  price         Float
  items         ItemForMenu[]
  order         Order[]
}

model ItemForMenu {
  id            Int   @id @default(autoincrement())
  item_id       Int
  quantity      Float
  itm_qty_price Float
  menu_id       Int
  menu          Menu  @relation(fields: [menu_id], references: [id])
}

model CustomOrder {
  id             Int        @id @default(autoincrement())
  quantity       Int?       @default(1)
  total          Float
  discount       Float
  grand_total    Float
  createDate     DateTime   @default(now())
  updateDate     DateTime   @updatedAt()
  user_id        String
  user           User       @relation(fields: [user_id], references: [id])
  custom_item_id Int
  custom_item    CustomMenu @relation(fields: [custom_item_id], references: [id])
}

model CustomMenu {
  id            Int                 @id @default(autoincrement())
  name          String
  category_type CategoryType
  price         Float
  items         ItemForCustomMenu[]
  custom_order  CustomOrder[]
}

model ItemForCustomMenu {
  id             Int        @id @default(autoincrement())
  item_id        Int
  quantity       Float
  itm_qty_price  Float
  custom_menu_id Int
  custom_menu    CustomMenu @relation(fields: [custom_menu_id], references: [id])
}

model ItemList {
  id            Int      @id @default(autoincrement())
  item_name     String   @unique
  item_price    Float
  item_quantity Float
  s_i_unit      String
  createDate    DateTime @default(now())
  updateDate    DateTime @updatedAt()
  shelf_life    Float?
  item_image    String?
  in_stock      Boolean  @default(false)
}
